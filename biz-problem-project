{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Miami Restuarant Market Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Introduction / Business Problem"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Miami, FL is a melting pot of a plethora of different cultures and communities. I was fortunate to grow up in the city and witness this first hand. \n",
    "\n",
    "I have decided that for my final project I will be assisting a new and upcoming restaurant entrepreneur decide where in Miami to open up a restaurant. He has approached me to assist in running  thorough analysis in order to determine the best location to open a new Peruvian Grill Restaurant. I will be assessing the different distictive factors of the neighborhoods that Miami is comprised of in order to come up with the best recommnedation."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In order to carry out this analysis I will first have to scrape a table of the different neighborhoods and municipalities in the city of Miami. I will import a table from wikipedia to accomplish this. After this, I will use geopy to obtain the latitude and longitude coordinates for each neighborhood.\n",
    "\n",
    "Now I am ready to feed this data into Foursquare and obtain features/characteristics about each neighborhood."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 296,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from geopy.geocoders import Nominatim"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 297,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Municipality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Andover</td>\n",
       "      <td>Miami Gardens</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>Golden Glades</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Bunche Park</td>\n",
       "      <td>Miami Gardens</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Carol City</td>\n",
       "      <td>Miami Gardens</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Coral Way Village</td>\n",
       "      <td>Westchester</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>Cutler</td>\n",
       "      <td>Palmetto Bay</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>Dadeland</td>\n",
       "      <td>Kendall</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>East Perrine</td>\n",
       "      <td>Palmetto Bay</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>Green-Mar Acres</td>\n",
       "      <td>Kendall</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>Hawley Heights</td>\n",
       "      <td>Kendall</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>Howard</td>\n",
       "      <td>Kendall</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>Lake Lucerne</td>\n",
       "      <td>Miami Gardens</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>Lakes by the Bay</td>\n",
       "      <td>Cutler Bay</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>Norwood (Norland)</td>\n",
       "      <td>Miami Gardens</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>Opa-locka North</td>\n",
       "      <td>Miami Gardens</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>Saga Bay</td>\n",
       "      <td>Cutler Bay</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>Scott Lake</td>\n",
       "      <td>Miami Gardens</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>South Beach</td>\n",
       "      <td>Miami Beach</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18</td>\n",
       "      <td>West Kendall</td>\n",
       "      <td>Kendall</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Neighborhood   Municipality\n",
       "0             Andover  Miami Gardens\n",
       "1    Biscayne Gardens  Golden Glades\n",
       "2         Bunche Park  Miami Gardens\n",
       "3          Carol City  Miami Gardens\n",
       "4   Coral Way Village    Westchester\n",
       "5              Cutler   Palmetto Bay\n",
       "6            Dadeland        Kendall\n",
       "7        East Perrine   Palmetto Bay\n",
       "8     Green-Mar Acres        Kendall\n",
       "9      Hawley Heights        Kendall\n",
       "10             Howard        Kendall\n",
       "11       Lake Lucerne  Miami Gardens\n",
       "12   Lakes by the Bay     Cutler Bay\n",
       "13  Norwood (Norland)  Miami Gardens\n",
       "14    Opa-locka North  Miami Gardens\n",
       "15           Saga Bay     Cutler Bay\n",
       "16         Scott Lake  Miami Gardens\n",
       "17        South Beach    Miami Beach\n",
       "18       West Kendall        Kendall"
      ]
     },
     "execution_count": 297,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "link = \"https://en.wikipedia.org/wiki/List_of_communities_in_Miami-Dade_County,_Florida\"\n",
    "df = pd.read_html(link, header=0)[2]\n",
    "df.rename(columns = {'District / neighborhood': 'Neighborhood'}, inplace = True)\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Dropping one Neighborhood that Geopy was not able to find coordinates for"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 298,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Municipality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Andover</td>\n",
       "      <td>Miami Gardens</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>Golden Glades</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Bunche Park</td>\n",
       "      <td>Miami Gardens</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Carol City</td>\n",
       "      <td>Miami Gardens</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Coral Way Village</td>\n",
       "      <td>Westchester</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>Cutler</td>\n",
       "      <td>Palmetto Bay</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>Dadeland</td>\n",
       "      <td>Kendall</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>East Perrine</td>\n",
       "      <td>Palmetto Bay</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>Green-Mar Acres</td>\n",
       "      <td>Kendall</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>Hawley Heights</td>\n",
       "      <td>Kendall</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>Howard</td>\n",
       "      <td>Kendall</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>Lake Lucerne</td>\n",
       "      <td>Miami Gardens</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>Lakes by the Bay</td>\n",
       "      <td>Cutler Bay</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>Norwood (Norland)</td>\n",
       "      <td>Miami Gardens</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>Saga Bay</td>\n",
       "      <td>Cutler Bay</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>Scott Lake</td>\n",
       "      <td>Miami Gardens</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>South Beach</td>\n",
       "      <td>Miami Beach</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>West Kendall</td>\n",
       "      <td>Kendall</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Neighborhood   Municipality\n",
       "0             Andover  Miami Gardens\n",
       "1    Biscayne Gardens  Golden Glades\n",
       "2         Bunche Park  Miami Gardens\n",
       "3          Carol City  Miami Gardens\n",
       "4   Coral Way Village    Westchester\n",
       "5              Cutler   Palmetto Bay\n",
       "6            Dadeland        Kendall\n",
       "7        East Perrine   Palmetto Bay\n",
       "8     Green-Mar Acres        Kendall\n",
       "9      Hawley Heights        Kendall\n",
       "10             Howard        Kendall\n",
       "11       Lake Lucerne  Miami Gardens\n",
       "12   Lakes by the Bay     Cutler Bay\n",
       "13  Norwood (Norland)  Miami Gardens\n",
       "14           Saga Bay     Cutler Bay\n",
       "15         Scott Lake  Miami Gardens\n",
       "16        South Beach    Miami Beach\n",
       "17       West Kendall        Kendall"
      ]
     },
     "execution_count": 298,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_drop = df.drop(14, axis=0)\n",
    "df_drop.reset_index(drop=True, inplace=True)\n",
    "df_drop\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Extracting Latitude and Longitude Coordinates for each Neighborhood\n",
    "\n",
    "#### I attempted using a for loop as show below but for some reason it struggled in finding a reliable connection and had to resort to \n",
    "#### doing it manually as seen further below"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 299,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "#latitude = []\n",
    "#longitude = []\n",
    "\n",
    "\n",
    "#for hood, mun in zip(df['Neighborhood'],df['Municipality']):\n",
    "   # geolocator = Nominatim(user_agent=\"MIA_explorer\")\n",
    "   # address = hood + \", \" + mun    \n",
    "   #location = geolocator.geocode(address)\n",
    "   # lat = location.latitude\n",
    "   # long = location.longitude\n",
    "   # latitude.append(lat)\n",
    "   # longitude.append(long)\n",
    "    \n",
    "   \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 300,
   "metadata": {},
   "outputs": [],
   "source": [
    "geolocator = Nominatim(user_agent=\"MIA_explorer\")\n",
    "\n",
    "latitude = []\n",
    "longitude = []  \n",
    "    \n",
    "address = df['Neighborhood'][0] + ', ' + df['Municipality'][0] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][1] + ', ' + df['Municipality'][1] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][2] + ', ' + df['Municipality'][2] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][3] + ', ' + df['Municipality'][3] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][4] + ', ' + df['Municipality'][4] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][5] + ', ' + df['Municipality'][5] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][6] + ', ' + df['Municipality'][6] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][7] + ', ' + df['Municipality'][7] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][8] + ', ' + df['Municipality'][8] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][9] + ', ' + df['Municipality'][9] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][10] + ', ' + df['Municipality'][10] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][11] + ', ' + df['Municipality'][11] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][12] + ', ' + df['Municipality'][12] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][13] + ', ' + df['Municipality'][13] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 301,
   "metadata": {},
   "outputs": [],
   "source": [
    "address = df['Neighborhood'][15] + ', ' + df['Municipality'][15] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][16] + ', ' + df['Municipality'][16] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)\n",
    "\n",
    "address = df['Neighborhood'][17] + ', ' + df['Municipality'][17] \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 302,
   "metadata": {},
   "outputs": [],
   "source": [
    "address = df['Neighborhood'][18] + ', ' + df['Municipality'][18] + ', Miami' \n",
    "location = geolocator.geocode(address)\n",
    "lat = location.latitude\n",
    "long = location.longitude\n",
    "latitude.append(lat)\n",
    "longitude.append(long)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 303,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Municipality</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Andover</td>\n",
       "      <td>Miami Gardens</td>\n",
       "      <td>25.968425</td>\n",
       "      <td>-80.212826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>Golden Glades</td>\n",
       "      <td>25.921400</td>\n",
       "      <td>-80.217098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Bunche Park</td>\n",
       "      <td>Miami Gardens</td>\n",
       "      <td>25.920649</td>\n",
       "      <td>-80.236993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Carol City</td>\n",
       "      <td>Miami Gardens</td>\n",
       "      <td>25.940649</td>\n",
       "      <td>-80.245604</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Coral Way Village</td>\n",
       "      <td>Westchester</td>\n",
       "      <td>25.747305</td>\n",
       "      <td>-80.317700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>Cutler</td>\n",
       "      <td>Palmetto Bay</td>\n",
       "      <td>25.601008</td>\n",
       "      <td>-80.335983</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>Dadeland</td>\n",
       "      <td>Kendall</td>\n",
       "      <td>25.689273</td>\n",
       "      <td>-80.314201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>East Perrine</td>\n",
       "      <td>Palmetto Bay</td>\n",
       "      <td>25.608716</td>\n",
       "      <td>-80.338942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>Green-Mar Acres</td>\n",
       "      <td>Kendall</td>\n",
       "      <td>25.670937</td>\n",
       "      <td>-80.342831</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>Hawley Heights</td>\n",
       "      <td>Kendall</td>\n",
       "      <td>25.671813</td>\n",
       "      <td>-80.354861</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>Howard</td>\n",
       "      <td>Kendall</td>\n",
       "      <td>25.647326</td>\n",
       "      <td>-80.334219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>Lake Lucerne</td>\n",
       "      <td>Miami Gardens</td>\n",
       "      <td>25.965092</td>\n",
       "      <td>-80.241438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>Lakes by the Bay</td>\n",
       "      <td>Cutler Bay</td>\n",
       "      <td>25.572329</td>\n",
       "      <td>-80.325331</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>Norwood (Norland)</td>\n",
       "      <td>Miami Gardens</td>\n",
       "      <td>25.952025</td>\n",
       "      <td>-80.224928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>Saga Bay</td>\n",
       "      <td>Cutler Bay</td>\n",
       "      <td>25.580373</td>\n",
       "      <td>-80.324675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>Scott Lake</td>\n",
       "      <td>Miami Gardens</td>\n",
       "      <td>25.941482</td>\n",
       "      <td>-80.231993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>South Beach</td>\n",
       "      <td>Miami Beach</td>\n",
       "      <td>25.774429</td>\n",
       "      <td>-80.133241</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>West Kendall</td>\n",
       "      <td>Kendall</td>\n",
       "      <td>25.671813</td>\n",
       "      <td>-80.354861</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Neighborhood   Municipality   Latitude  Longitude\n",
       "0             Andover  Miami Gardens  25.968425 -80.212826\n",
       "1    Biscayne Gardens  Golden Glades  25.921400 -80.217098\n",
       "2         Bunche Park  Miami Gardens  25.920649 -80.236993\n",
       "3          Carol City  Miami Gardens  25.940649 -80.245604\n",
       "4   Coral Way Village    Westchester  25.747305 -80.317700\n",
       "5              Cutler   Palmetto Bay  25.601008 -80.335983\n",
       "6            Dadeland        Kendall  25.689273 -80.314201\n",
       "7        East Perrine   Palmetto Bay  25.608716 -80.338942\n",
       "8     Green-Mar Acres        Kendall  25.670937 -80.342831\n",
       "9      Hawley Heights        Kendall  25.671813 -80.354861\n",
       "10             Howard        Kendall  25.647326 -80.334219\n",
       "11       Lake Lucerne  Miami Gardens  25.965092 -80.241438\n",
       "12   Lakes by the Bay     Cutler Bay  25.572329 -80.325331\n",
       "13  Norwood (Norland)  Miami Gardens  25.952025 -80.224928\n",
       "14           Saga Bay     Cutler Bay  25.580373 -80.324675\n",
       "15         Scott Lake  Miami Gardens  25.941482 -80.231993\n",
       "16        South Beach    Miami Beach  25.774429 -80.133241\n",
       "17       West Kendall        Kendall  25.671813 -80.354861"
      ]
     },
     "execution_count": 303,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_drop['Latitude'] = latitude\n",
    "df_drop['Longitude'] = longitude\n",
    "df_drop"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Making sure the size is as expected and everything ran fine"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 304,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(18, 4)"
      ]
     },
     "execution_count": 304,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_drop.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Clustering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 305,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import k-means from clustering stage\n",
    "from sklearn.cluster import KMeans\n",
    "\n",
    "import folium # map rendering library\n",
    "\n",
    "import requests # library to handle requests\n",
    "from pandas.io.json import json_normalize # tranform JSON file into a pandas dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 306,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your credentails:\n",
      "CLIENT_ID: MZTMBBHUAHZE4MN3KTYIC11SEREK2Y3LG1BNDJ5P2HV2XVO1\n",
      "CLIENT_SECRET:WHKC0EIJB33VRMDLRLXW3AQKDDOH0OMO3BNEGTCFZ4RLUNT4\n"
     ]
    }
   ],
   "source": [
    "CLIENT_ID = 'MZTMBBHUAHZE4MN3KTYIC11SEREK2Y3LG1BNDJ5P2HV2XVO1' # your Foursquare ID\n",
    "CLIENT_SECRET = 'WHKC0EIJB33VRMDLRLXW3AQKDDOH0OMO3BNEGTCFZ4RLUNT4' # your Foursquare Secret\n",
    "VERSION = '20180605' # Foursquare API version\n",
    "\n",
    "#Setting Parameters for Foursquare Search\n",
    "LIMIT = 100\n",
    "radius = 1000\n",
    "\n",
    "print('Your credentails:')\n",
    "print('CLIENT_ID: ' + CLIENT_ID)\n",
    "print('CLIENT_SECRET:' + CLIENT_SECRET)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 307,
   "metadata": {},
   "outputs": [],
   "source": [
    "def getNearbyVenues(names, latitudes, longitudes, radius=500):\n",
    "    \n",
    "    venues_list=[]\n",
    "    for name, lat, lng in zip(names, latitudes, longitudes):\n",
    "        print(name)\n",
    "            \n",
    "        # create the API request URL\n",
    "        url = 'https://api.foursquare.com/v2/venues/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}'.format(\n",
    "            CLIENT_ID, \n",
    "            CLIENT_SECRET, \n",
    "            VERSION, \n",
    "            lat, \n",
    "            lng, \n",
    "            radius, \n",
    "            LIMIT)\n",
    "            \n",
    "        # make the GET request\n",
    "        results = requests.get(url).json()[\"response\"]['groups'][0]['items']\n",
    "        \n",
    "        # return only relevant information for each nearby venue\n",
    "        venues_list.append([(\n",
    "            name, \n",
    "            lat, \n",
    "            lng, \n",
    "            v['venue']['name'], \n",
    "            v['venue']['location']['lat'], \n",
    "            v['venue']['location']['lng'],  \n",
    "            v['venue']['categories'][0]['name']) for v in results])\n",
    "\n",
    "    nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n",
    "    nearby_venues.columns = ['Neighborhood', \n",
    "                  'Neighborhood Latitude', \n",
    "                  'Neighborhood Longitude', \n",
    "                  'Venue', \n",
    "                  'Venue Latitude', \n",
    "                  'Venue Longitude', \n",
    "                  'Venue Category']\n",
    "    \n",
    "    return(nearby_venues)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Andover\n",
      "Biscayne Gardens\n",
      "Bunche Park\n",
      "Carol City\n",
      "Coral Way Village\n",
      "Cutler\n",
      "Dadeland\n",
      "East Perrine\n",
      "Green-Mar Acres\n",
      "Hawley Heights\n",
      "Howard\n",
      "Lake Lucerne\n",
      "Lakes by the Bay\n",
      "Norwood (Norland)\n",
      "Saga Bay\n",
      "Scott Lake\n",
      "South Beach\n",
      "West Kendall\n"
     ]
    }
   ],
   "source": [
    "miami_venues = getNearbyVenues(names=df_drop['Neighborhood'],\n",
    "                                   latitudes=df_drop['Latitude'],\n",
    "                                   longitudes=df_drop['Longitude']\n",
    "                                  )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 309,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(268, 7)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Neighborhood Latitude</th>\n",
       "      <th>Neighborhood Longitude</th>\n",
       "      <th>Venue</th>\n",
       "      <th>Venue Latitude</th>\n",
       "      <th>Venue Longitude</th>\n",
       "      <th>Venue Category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Andover</td>\n",
       "      <td>25.968425</td>\n",
       "      <td>-80.212826</td>\n",
       "      <td>Jennifer Montas</td>\n",
       "      <td>25.969591</td>\n",
       "      <td>-80.215830</td>\n",
       "      <td>Food</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>25.921400</td>\n",
       "      <td>-80.217098</td>\n",
       "      <td>Tri-Rail - Golden Glades Station</td>\n",
       "      <td>25.921458</td>\n",
       "      <td>-80.216983</td>\n",
       "      <td>Train Station</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>25.921400</td>\n",
       "      <td>-80.217098</td>\n",
       "      <td>Miami Gardens FL Plumbers</td>\n",
       "      <td>25.922648</td>\n",
       "      <td>-80.216423</td>\n",
       "      <td>Home Service</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>25.921400</td>\n",
       "      <td>-80.217098</td>\n",
       "      <td>ISCAR GROUND SERVICES CORPORATION</td>\n",
       "      <td>25.920639</td>\n",
       "      <td>-80.218973</td>\n",
       "      <td>Airport Service</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>25.921400</td>\n",
       "      <td>-80.217098</td>\n",
       "      <td>Golden Glades Multimodal Center</td>\n",
       "      <td>25.920781</td>\n",
       "      <td>-80.215115</td>\n",
       "      <td>Bus Station</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Neighborhood  Neighborhood Latitude  Neighborhood Longitude  \\\n",
       "0           Andover              25.968425              -80.212826   \n",
       "1  Biscayne Gardens              25.921400              -80.217098   \n",
       "2  Biscayne Gardens              25.921400              -80.217098   \n",
       "3  Biscayne Gardens              25.921400              -80.217098   \n",
       "4  Biscayne Gardens              25.921400              -80.217098   \n",
       "\n",
       "                               Venue  Venue Latitude  Venue Longitude  \\\n",
       "0                    Jennifer Montas       25.969591       -80.215830   \n",
       "1   Tri-Rail - Golden Glades Station       25.921458       -80.216983   \n",
       "2          Miami Gardens FL Plumbers       25.922648       -80.216423   \n",
       "3  ISCAR GROUND SERVICES CORPORATION       25.920639       -80.218973   \n",
       "4    Golden Glades Multimodal Center       25.920781       -80.215115   \n",
       "\n",
       "    Venue Category  \n",
       "0             Food  \n",
       "1    Train Station  \n",
       "2     Home Service  \n",
       "3  Airport Service  \n",
       "4      Bus Station  "
      ]
     },
     "execution_count": 309,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(miami_venues.shape)\n",
    "miami_venues.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Checking to see how many venues are located in each neighborhood"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 310,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood Latitude</th>\n",
       "      <th>Neighborhood Longitude</th>\n",
       "      <th>Venue</th>\n",
       "      <th>Venue Latitude</th>\n",
       "      <th>Venue Longitude</th>\n",
       "      <th>Venue Category</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Neighborhood</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Andover</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Bunche Park</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Carol City</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Coral Way Village</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Cutler</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Dadeland</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Green-Mar Acres</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Hawley Heights</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Howard</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Lake Lucerne</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Lakes by the Bay</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Norwood (Norland)</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Saga Bay</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Scott Lake</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>South Beach</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>West Kendall</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Neighborhood Latitude  Neighborhood Longitude  Venue  \\\n",
       "Neighborhood                                                              \n",
       "Andover                                1                       1      1   \n",
       "Biscayne Gardens                       7                       7      7   \n",
       "Bunche Park                            2                       2      2   \n",
       "Carol City                            16                      16     16   \n",
       "Coral Way Village                      8                       8      8   \n",
       "Cutler                                 2                       2      2   \n",
       "Dadeland                              49                      49     49   \n",
       "Green-Mar Acres                        3                       3      3   \n",
       "Hawley Heights                         6                       6      6   \n",
       "Howard                                49                      49     49   \n",
       "Lake Lucerne                           5                       5      5   \n",
       "Lakes by the Bay                       4                       4      4   \n",
       "Norwood (Norland)                      3                       3      3   \n",
       "Saga Bay                               4                       4      4   \n",
       "Scott Lake                             3                       3      3   \n",
       "South Beach                          100                     100    100   \n",
       "West Kendall                           6                       6      6   \n",
       "\n",
       "                   Venue Latitude  Venue Longitude  Venue Category  \n",
       "Neighborhood                                                        \n",
       "Andover                         1                1               1  \n",
       "Biscayne Gardens                7                7               7  \n",
       "Bunche Park                     2                2               2  \n",
       "Carol City                     16               16              16  \n",
       "Coral Way Village               8                8               8  \n",
       "Cutler                          2                2               2  \n",
       "Dadeland                       49               49              49  \n",
       "Green-Mar Acres                 3                3               3  \n",
       "Hawley Heights                  6                6               6  \n",
       "Howard                         49               49              49  \n",
       "Lake Lucerne                    5                5               5  \n",
       "Lakes by the Bay                4                4               4  \n",
       "Norwood (Norland)               3                3               3  \n",
       "Saga Bay                        4                4               4  \n",
       "Scott Lake                      3                3               3  \n",
       "South Beach                   100              100             100  \n",
       "West Kendall                    6                6               6  "
      ]
     },
     "execution_count": 310,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "miami_venues.groupby('Neighborhood').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 359,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "count_chart = miami_venues.groupby('Neighborhood').count()\n",
    "count_chart.reset_index(inplace=True)\n",
    "ax = count_chart.plot.barh(x='Neighborhood', y='Venue')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### How many unique venue categories were there in the data fetched?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 311,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 108 unique categories.\n"
     ]
    }
   ],
   "source": [
    "print('There are {} unique categories.'.format(len(miami_venues['Venue Category'].unique())))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analyzing each neighborhood"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 312,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Accessories Store</th>\n",
       "      <th>Airport Service</th>\n",
       "      <th>American Restaurant</th>\n",
       "      <th>Argentinian Restaurant</th>\n",
       "      <th>Art Gallery</th>\n",
       "      <th>Asian Restaurant</th>\n",
       "      <th>Auto Workshop</th>\n",
       "      <th>BBQ Joint</th>\n",
       "      <th>Bakery</th>\n",
       "      <th>...</th>\n",
       "      <th>Tapas Restaurant</th>\n",
       "      <th>Tex-Mex Restaurant</th>\n",
       "      <th>Trail</th>\n",
       "      <th>Train Station</th>\n",
       "      <th>Turkish Restaurant</th>\n",
       "      <th>Vegetarian / Vegan Restaurant</th>\n",
       "      <th>Video Game Store</th>\n",
       "      <th>Vietnamese Restaurant</th>\n",
       "      <th>Wine Shop</th>\n",
       "      <th>Yoga Studio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Andover</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 109 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Neighborhood  Accessories Store  Airport Service  American Restaurant  \\\n",
       "0           Andover                  0                0                    0   \n",
       "1  Biscayne Gardens                  0                0                    0   \n",
       "2  Biscayne Gardens                  0                0                    0   \n",
       "3  Biscayne Gardens                  0                1                    0   \n",
       "4  Biscayne Gardens                  0                0                    0   \n",
       "\n",
       "   Argentinian Restaurant  Art Gallery  Asian Restaurant  Auto Workshop  \\\n",
       "0                       0            0                 0              0   \n",
       "1                       0            0                 0              0   \n",
       "2                       0            0                 0              0   \n",
       "3                       0            0                 0              0   \n",
       "4                       0            0                 0              0   \n",
       "\n",
       "   BBQ Joint  Bakery  ...  Tapas Restaurant  Tex-Mex Restaurant  Trail  \\\n",
       "0          0       0  ...                 0                   0      0   \n",
       "1          0       0  ...                 0                   0      0   \n",
       "2          0       0  ...                 0                   0      0   \n",
       "3          0       0  ...                 0                   0      0   \n",
       "4          0       0  ...                 0                   0      0   \n",
       "\n",
       "   Train Station  Turkish Restaurant  Vegetarian / Vegan Restaurant  \\\n",
       "0              0                   0                              0   \n",
       "1              1                   0                              0   \n",
       "2              0                   0                              0   \n",
       "3              0                   0                              0   \n",
       "4              0                   0                              0   \n",
       "\n",
       "   Video Game Store  Vietnamese Restaurant  Wine Shop  Yoga Studio  \n",
       "0                 0                      0          0            0  \n",
       "1                 0                      0          0            0  \n",
       "2                 0                      0          0            0  \n",
       "3                 0                      0          0            0  \n",
       "4                 0                      0          0            0  \n",
       "\n",
       "[5 rows x 109 columns]"
      ]
     },
     "execution_count": 312,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# one hot encoding\n",
    "miami_onehot = pd.get_dummies(miami_venues[['Venue Category']], prefix=\"\", prefix_sep=\"\")\n",
    "\n",
    "# add neighborhood column back to dataframe\n",
    "miami_onehot['Neighborhood'] = miami_venues['Neighborhood'] \n",
    "\n",
    "# move neighborhood column to the first column\n",
    "fixed_columns = [miami_onehot.columns[-1]] + list(miami_onehot.columns[:-1])\n",
    "miami_onehot = miami_onehot[fixed_columns]\n",
    "\n",
    "miami_onehot.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 313,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(268, 109)"
      ]
     },
     "execution_count": 313,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Examining Shape\n",
    "miami_onehot.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Grouping rows by neighborhood and calculating the mean frequency occurence of each category"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 314,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Accessories Store</th>\n",
       "      <th>Airport Service</th>\n",
       "      <th>American Restaurant</th>\n",
       "      <th>Argentinian Restaurant</th>\n",
       "      <th>Art Gallery</th>\n",
       "      <th>Asian Restaurant</th>\n",
       "      <th>Auto Workshop</th>\n",
       "      <th>BBQ Joint</th>\n",
       "      <th>Bakery</th>\n",
       "      <th>...</th>\n",
       "      <th>Tapas Restaurant</th>\n",
       "      <th>Tex-Mex Restaurant</th>\n",
       "      <th>Trail</th>\n",
       "      <th>Train Station</th>\n",
       "      <th>Turkish Restaurant</th>\n",
       "      <th>Vegetarian / Vegan Restaurant</th>\n",
       "      <th>Video Game Store</th>\n",
       "      <th>Vietnamese Restaurant</th>\n",
       "      <th>Wine Shop</th>\n",
       "      <th>Yoga Studio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Andover</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Bunche Park</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Carol City</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.062500</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0625</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Coral Way Village</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.125000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>Cutler</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>Dadeland</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.040816</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>Green-Mar Acres</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>Hawley Heights</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>Howard</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>Lake Lucerne</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>Lakes by the Bay</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2500</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>Norwood (Norland)</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>Saga Bay</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>Scott Lake</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>South Beach</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>West Kendall</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>17 rows × 109 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Neighborhood  Accessories Store  Airport Service  \\\n",
       "0             Andover               0.00         0.000000   \n",
       "1    Biscayne Gardens               0.00         0.142857   \n",
       "2         Bunche Park               0.00         0.000000   \n",
       "3          Carol City               0.00         0.000000   \n",
       "4   Coral Way Village               0.00         0.000000   \n",
       "5              Cutler               0.00         0.000000   \n",
       "6            Dadeland               0.00         0.000000   \n",
       "7     Green-Mar Acres               0.00         0.000000   \n",
       "8      Hawley Heights               0.00         0.000000   \n",
       "9              Howard               0.00         0.000000   \n",
       "10       Lake Lucerne               0.00         0.000000   \n",
       "11   Lakes by the Bay               0.00         0.000000   \n",
       "12  Norwood (Norland)               0.00         0.000000   \n",
       "13           Saga Bay               0.00         0.000000   \n",
       "14         Scott Lake               0.00         0.000000   \n",
       "15        South Beach               0.01         0.000000   \n",
       "16       West Kendall               0.00         0.000000   \n",
       "\n",
       "    American Restaurant  Argentinian Restaurant  Art Gallery  \\\n",
       "0              0.000000                    0.00     0.000000   \n",
       "1              0.000000                    0.00     0.000000   \n",
       "2              0.000000                    0.00     0.000000   \n",
       "3              0.000000                    0.00     0.000000   \n",
       "4              0.000000                    0.00     0.000000   \n",
       "5              0.000000                    0.00     0.000000   \n",
       "6              0.040816                    0.00     0.000000   \n",
       "7              0.000000                    0.00     0.333333   \n",
       "8              0.000000                    0.00     0.000000   \n",
       "9              0.020408                    0.00     0.020408   \n",
       "10             0.000000                    0.00     0.000000   \n",
       "11             0.250000                    0.00     0.000000   \n",
       "12             0.000000                    0.00     0.000000   \n",
       "13             0.000000                    0.00     0.000000   \n",
       "14             0.333333                    0.00     0.000000   \n",
       "15             0.020000                    0.01     0.000000   \n",
       "16             0.000000                    0.00     0.000000   \n",
       "\n",
       "    Asian Restaurant  Auto Workshop  BBQ Joint    Bakery  ...  \\\n",
       "0           0.000000       0.000000   0.000000  0.000000  ...   \n",
       "1           0.000000       0.000000   0.000000  0.000000  ...   \n",
       "2           0.000000       0.000000   0.000000  0.000000  ...   \n",
       "3           0.000000       0.000000   0.000000  0.062500  ...   \n",
       "4           0.000000       0.000000   0.000000  0.125000  ...   \n",
       "5           0.000000       0.000000   0.000000  0.000000  ...   \n",
       "6           0.020408       0.000000   0.020408  0.020408  ...   \n",
       "7           0.000000       0.000000   0.000000  0.000000  ...   \n",
       "8           0.000000       0.000000   0.000000  0.000000  ...   \n",
       "9           0.000000       0.000000   0.000000  0.000000  ...   \n",
       "10          0.000000       0.000000   0.000000  0.000000  ...   \n",
       "11          0.000000       0.000000   0.000000  0.000000  ...   \n",
       "12          0.000000       0.333333   0.000000  0.000000  ...   \n",
       "13          0.000000       0.000000   0.000000  0.000000  ...   \n",
       "14          0.000000       0.000000   0.000000  0.000000  ...   \n",
       "15          0.000000       0.000000   0.000000  0.010000  ...   \n",
       "16          0.000000       0.000000   0.000000  0.000000  ...   \n",
       "\n",
       "    Tapas Restaurant  Tex-Mex Restaurant   Trail  Train Station  \\\n",
       "0               0.00            0.000000  0.0000       0.000000   \n",
       "1               0.00            0.000000  0.0000       0.142857   \n",
       "2               0.00            0.000000  0.0000       0.000000   \n",
       "3               0.00            0.000000  0.0625       0.000000   \n",
       "4               0.00            0.000000  0.0000       0.000000   \n",
       "5               0.00            0.000000  0.0000       0.000000   \n",
       "6               0.00            0.020408  0.0000       0.000000   \n",
       "7               0.00            0.000000  0.0000       0.000000   \n",
       "8               0.00            0.000000  0.0000       0.000000   \n",
       "9               0.00            0.000000  0.0000       0.000000   \n",
       "10              0.00            0.000000  0.0000       0.000000   \n",
       "11              0.00            0.000000  0.2500       0.000000   \n",
       "12              0.00            0.000000  0.0000       0.000000   \n",
       "13              0.00            0.000000  0.0000       0.000000   \n",
       "14              0.00            0.000000  0.0000       0.000000   \n",
       "15              0.01            0.000000  0.0000       0.000000   \n",
       "16              0.00            0.000000  0.0000       0.000000   \n",
       "\n",
       "    Turkish Restaurant  Vegetarian / Vegan Restaurant  Video Game Store  \\\n",
       "0                 0.00                           0.00          0.000000   \n",
       "1                 0.00                           0.00          0.000000   \n",
       "2                 0.00                           0.00          0.000000   \n",
       "3                 0.00                           0.00          0.000000   \n",
       "4                 0.00                           0.00          0.000000   \n",
       "5                 0.00                           0.00          0.000000   \n",
       "6                 0.00                           0.00          0.000000   \n",
       "7                 0.00                           0.00          0.000000   \n",
       "8                 0.00                           0.00          0.000000   \n",
       "9                 0.00                           0.00          0.020408   \n",
       "10                0.00                           0.00          0.000000   \n",
       "11                0.00                           0.00          0.000000   \n",
       "12                0.00                           0.00          0.000000   \n",
       "13                0.00                           0.00          0.000000   \n",
       "14                0.00                           0.00          0.000000   \n",
       "15                0.01                           0.01          0.000000   \n",
       "16                0.00                           0.00          0.000000   \n",
       "\n",
       "    Vietnamese Restaurant  Wine Shop  Yoga Studio  \n",
       "0                    0.00   0.000000     0.000000  \n",
       "1                    0.00   0.000000     0.000000  \n",
       "2                    0.00   0.000000     0.000000  \n",
       "3                    0.00   0.000000     0.000000  \n",
       "4                    0.00   0.000000     0.000000  \n",
       "5                    0.00   0.000000     0.000000  \n",
       "6                    0.00   0.000000     0.020408  \n",
       "7                    0.00   0.000000     0.333333  \n",
       "8                    0.00   0.000000     0.000000  \n",
       "9                    0.00   0.020408     0.000000  \n",
       "10                   0.00   0.000000     0.000000  \n",
       "11                   0.00   0.000000     0.000000  \n",
       "12                   0.00   0.000000     0.000000  \n",
       "13                   0.00   0.000000     0.000000  \n",
       "14                   0.00   0.000000     0.000000  \n",
       "15                   0.01   0.000000     0.020000  \n",
       "16                   0.00   0.000000     0.000000  \n",
       "\n",
       "[17 rows x 109 columns]"
      ]
     },
     "execution_count": 314,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "miami_grouped = miami_onehot.groupby('Neighborhood').mean().reset_index()\n",
    "miami_grouped"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Printing each neighborhood with its most common venue category"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 315,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "----Andover----\n",
      "                 venue  freq\n",
      "0                 Food   1.0\n",
      "1    Accessories Store   0.0\n",
      "2    Mobile Phone Shop   0.0\n",
      "3  Rental Car Location   0.0\n",
      "4                 Pool   0.0\n",
      "\n",
      "\n",
      "----Biscayne Gardens----\n",
      "             venue  freq\n",
      "0      Bus Station  0.43\n",
      "1         Building  0.14\n",
      "2  Airport Service  0.14\n",
      "3     Home Service  0.14\n",
      "4    Train Station  0.14\n",
      "\n",
      "\n",
      "----Bunche Park----\n",
      "                venue  freq\n",
      "0  Salon / Barbershop   0.5\n",
      "1                Park   0.5\n",
      "2   Accessories Store   0.0\n",
      "3  Miscellaneous Shop   0.0\n",
      "4                Pool   0.0\n",
      "\n",
      "\n",
      "----Carol City----\n",
      "                  venue  freq\n",
      "0  Fast Food Restaurant  0.25\n",
      "1         Grocery Store  0.06\n",
      "2                Bakery  0.06\n",
      "3      Department Store  0.06\n",
      "4            Strip Club  0.06\n",
      "\n",
      "\n",
      "----Coral Way Village----\n",
      "                  venue  freq\n",
      "0             Cafeteria  0.12\n",
      "1           Pizza Place  0.12\n",
      "2  Fast Food Restaurant  0.12\n",
      "3                Bakery  0.12\n",
      "4                Market  0.12\n",
      "\n",
      "\n",
      "----Cutler----\n",
      "                 venue  freq\n",
      "0           Lighthouse   0.5\n",
      "1        Grocery Store   0.5\n",
      "2    Accessories Store   0.0\n",
      "3    Mobile Phone Shop   0.0\n",
      "4  Rental Car Location   0.0\n",
      "\n",
      "\n",
      "----Dadeland----\n",
      "                    venue  freq\n",
      "0          Clothing Store  0.14\n",
      "1        Department Store  0.08\n",
      "2             Coffee Shop  0.08\n",
      "3     American Restaurant  0.04\n",
      "4  Furniture / Home Store  0.04\n",
      "\n",
      "\n",
      "----Green-Mar Acres----\n",
      "                 venue  freq\n",
      "0          Yoga Studio  0.33\n",
      "1          Art Gallery  0.33\n",
      "2           Playground  0.33\n",
      "3   Miscellaneous Shop  0.00\n",
      "4  Rental Car Location  0.00\n",
      "\n",
      "\n",
      "----Hawley Heights----\n",
      "             venue  freq\n",
      "0     Burger Joint  0.17\n",
      "1      Golf Course  0.17\n",
      "2             Pool  0.17\n",
      "3     Soccer Field  0.17\n",
      "4  Bed & Breakfast  0.17\n",
      "\n",
      "\n",
      "----Howard----\n",
      "                 venue  freq\n",
      "0        Grocery Store  0.06\n",
      "1           Restaurant  0.04\n",
      "2  Sporting Goods Shop  0.04\n",
      "3         Burger Joint  0.04\n",
      "4   Italian Restaurant  0.04\n",
      "\n",
      "\n",
      "----Lake Lucerne----\n",
      "                 venue  freq\n",
      "0           Restaurant   0.6\n",
      "1               Casino   0.4\n",
      "2    Accessories Store   0.0\n",
      "3    Mobile Phone Shop   0.0\n",
      "4  Rental Car Location   0.0\n",
      "\n",
      "\n",
      "----Lakes by the Bay----\n",
      "                 venue  freq\n",
      "0  American Restaurant  0.25\n",
      "1  Housing Development  0.25\n",
      "2                Trail  0.25\n",
      "3                  Gym  0.25\n",
      "4    Accessories Store  0.00\n",
      "\n",
      "\n",
      "----Norwood (Norland)----\n",
      "               venue  freq\n",
      "0      Auto Workshop  0.33\n",
      "1               Park  0.33\n",
      "2         Food Truck  0.33\n",
      "3  Accessories Store  0.00\n",
      "4  Mobile Phone Shop  0.00\n",
      "\n",
      "\n",
      "----Saga Bay----\n",
      "               venue  freq\n",
      "0              Beach  0.50\n",
      "1       Concert Hall  0.25\n",
      "2      Grocery Store  0.25\n",
      "3  Mobile Phone Shop  0.00\n",
      "4             Resort  0.00\n",
      "\n",
      "\n",
      "----Scott Lake----\n",
      "                 venue  freq\n",
      "0  American Restaurant  0.33\n",
      "1       Discount Store  0.33\n",
      "2          Snack Place  0.33\n",
      "3    Accessories Store  0.00\n",
      "4    Mobile Phone Shop  0.00\n",
      "\n",
      "\n",
      "----South Beach----\n",
      "                venue  freq\n",
      "0               Hotel  0.13\n",
      "1      Clothing Store  0.08\n",
      "2               Beach  0.04\n",
      "3  Seafood Restaurant  0.04\n",
      "4            Pharmacy  0.04\n",
      "\n",
      "\n",
      "----West Kendall----\n",
      "             venue  freq\n",
      "0     Burger Joint  0.17\n",
      "1      Golf Course  0.17\n",
      "2             Pool  0.17\n",
      "3     Soccer Field  0.17\n",
      "4  Bed & Breakfast  0.17\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "num_top_venues = 5\n",
    "\n",
    "for hood in miami_grouped['Neighborhood']:\n",
    "    print(\"----\"+hood+\"----\")\n",
    "    temp = miami_grouped[miami_grouped['Neighborhood'] == hood].T.reset_index()\n",
    "    temp.columns = ['venue','freq']\n",
    "    temp = temp.iloc[1:]\n",
    "    temp['freq'] = temp['freq'].astype(float)\n",
    "    temp = temp.round({'freq': 2})\n",
    "    print(temp.sort_values('freq', ascending=False).reset_index(drop=True).head(num_top_venues))\n",
    "    print('\\n')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Converting these new findings into a dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 316,
   "metadata": {},
   "outputs": [],
   "source": [
    "def return_most_common_venues(row, num_top_venues):\n",
    "    row_categories = row.iloc[1:]\n",
    "    row_categories_sorted = row_categories.sort_values(ascending=False)\n",
    "    \n",
    "    return row_categories_sorted.index.values[0:num_top_venues]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 317,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Andover</td>\n",
       "      <td>Food</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>Bus Station</td>\n",
       "      <td>Building</td>\n",
       "      <td>Airport Service</td>\n",
       "      <td>Home Service</td>\n",
       "      <td>Train Station</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Bunche Park</td>\n",
       "      <td>Salon / Barbershop</td>\n",
       "      <td>Park</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Carol City</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Seafood Restaurant</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Miscellaneous Shop</td>\n",
       "      <td>Strip Club</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Caribbean Restaurant</td>\n",
       "      <td>Trail</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Coral Way Village</td>\n",
       "      <td>Spa</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Cafeteria</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Market</td>\n",
       "      <td>Gas Station</td>\n",
       "      <td>Sushi Restaurant</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Greek Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Neighborhood 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "0            Andover                  Food           Yoga Studio   \n",
       "1   Biscayne Gardens           Bus Station              Building   \n",
       "2        Bunche Park    Salon / Barbershop                  Park   \n",
       "3         Carol City  Fast Food Restaurant      Department Store   \n",
       "4  Coral Way Village                   Spa                Bakery   \n",
       "\n",
       "  3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue  \\\n",
       "0     French Restaurant     Convenience Store        Cosmetics Shop   \n",
       "1       Airport Service          Home Service         Train Station   \n",
       "2           Yoga Studio           Coffee Shop     Convenience Store   \n",
       "3    Seafood Restaurant        Sandwich Place    Miscellaneous Shop   \n",
       "4             Cafeteria  Fast Food Restaurant                Market   \n",
       "\n",
       "  6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n",
       "0      Cuban Restaurant          Dance Studio         Deli / Bodega   \n",
       "1           Yoga Studio        Cosmetics Shop      Cuban Restaurant   \n",
       "2        Cosmetics Shop      Cuban Restaurant          Dance Studio   \n",
       "3            Strip Club                Bakery  Caribbean Restaurant   \n",
       "4           Gas Station      Sushi Restaurant           Pizza Place   \n",
       "\n",
       "  9th Most Common Venue 10th Most Common Venue  \n",
       "0      Department Store         Discount Store  \n",
       "1          Dance Studio          Deli / Bodega  \n",
       "2         Deli / Bodega       Department Store  \n",
       "3                 Trail          Grocery Store  \n",
       "4      Greek Restaurant          Grocery Store  "
      ]
     },
     "execution_count": 317,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_top_venues = 10\n",
    "\n",
    "indicators = ['st', 'nd', 'rd']\n",
    "\n",
    "# create columns according to number of top venues\n",
    "columns = ['Neighborhood']\n",
    "for ind in np.arange(num_top_venues):\n",
    "    try:\n",
    "        columns.append('{}{} Most Common Venue'.format(ind+1, indicators[ind]))\n",
    "    except:\n",
    "        columns.append('{}th Most Common Venue'.format(ind+1))\n",
    "\n",
    "# create a new dataframe\n",
    "neighborhoods_venues_sorted = pd.DataFrame(columns=columns)\n",
    "neighborhoods_venues_sorted['Neighborhood'] = miami_grouped['Neighborhood']\n",
    "\n",
    "for ind in np.arange(miami_grouped.shape[0]):\n",
    "    neighborhoods_venues_sorted.iloc[ind, 1:] = return_most_common_venues(miami_grouped.iloc[ind, :], num_top_venues)\n",
    "\n",
    "neighborhoods_venues_sorted.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 365,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cluster Labels</th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>Dadeland</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>Indian Restaurant</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Japanese Restaurant</td>\n",
       "      <td>Jewelry Store</td>\n",
       "      <td>Kids Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>Green-Mar Acres</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Playground</td>\n",
       "      <td>Art Gallery</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>Hawley Heights</td>\n",
       "      <td>Pool</td>\n",
       "      <td>Burger Joint</td>\n",
       "      <td>Golf Course</td>\n",
       "      <td>Café</td>\n",
       "      <td>Bed &amp; Breakfast</td>\n",
       "      <td>Soccer Field</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>Howard</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Hardware Store</td>\n",
       "      <td>Sporting Goods Shop</td>\n",
       "      <td>Pharmacy</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Gym / Fitness Center</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Burger Joint</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>Lake Lucerne</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Casino</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>Lakes by the Bay</td>\n",
       "      <td>Housing Development</td>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>Trail</td>\n",
       "      <td>Gym</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>4</td>\n",
       "      <td>Norwood (Norland)</td>\n",
       "      <td>Park</td>\n",
       "      <td>Auto Workshop</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>Saga Bay</td>\n",
       "      <td>Beach</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Concert Hall</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>Scott Lake</td>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Snack Place</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>South Beach</td>\n",
       "      <td>Hotel</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Seafood Restaurant</td>\n",
       "      <td>Beach</td>\n",
       "      <td>Pharmacy</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Park</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Pizza Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>West Kendall</td>\n",
       "      <td>Pool</td>\n",
       "      <td>Burger Joint</td>\n",
       "      <td>Golf Course</td>\n",
       "      <td>Café</td>\n",
       "      <td>Bed &amp; Breakfast</td>\n",
       "      <td>Soccer Field</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Cluster Labels       Neighborhood 1st Most Common Venue  \\\n",
       "6                1           Dadeland        Clothing Store   \n",
       "7                1    Green-Mar Acres           Yoga Studio   \n",
       "8                1     Hawley Heights                  Pool   \n",
       "9                1             Howard         Grocery Store   \n",
       "10               3       Lake Lucerne            Restaurant   \n",
       "11               1   Lakes by the Bay   Housing Development   \n",
       "12               4  Norwood (Norland)                  Park   \n",
       "13               1           Saga Bay                 Beach   \n",
       "14               1         Scott Lake   American Restaurant   \n",
       "15               1        South Beach                 Hotel   \n",
       "16               1       West Kendall                  Pool   \n",
       "\n",
       "   2nd Most Common Venue 3rd Most Common Venue   4th Most Common Venue  \\\n",
       "6       Department Store           Coffee Shop  Furniture / Home Store   \n",
       "7             Playground           Art Gallery       French Restaurant   \n",
       "8           Burger Joint           Golf Course                    Café   \n",
       "9             Restaurant        Hardware Store     Sporting Goods Shop   \n",
       "10                Casino           Yoga Studio             Coffee Shop   \n",
       "11   American Restaurant                 Trail                     Gym   \n",
       "12         Auto Workshop            Food Truck             Yoga Studio   \n",
       "13         Grocery Store          Concert Hall             Yoga Studio   \n",
       "14        Discount Store           Snack Place             Yoga Studio   \n",
       "15        Clothing Store    Seafood Restaurant                   Beach   \n",
       "16          Burger Joint           Golf Course                    Café   \n",
       "\n",
       "   5th Most Common Venue 6th Most Common Venue 7th Most Common Venue  \\\n",
       "6    American Restaurant     Indian Restaurant    Italian Restaurant   \n",
       "7         Cosmetics Shop      Cuban Restaurant          Dance Studio   \n",
       "8        Bed & Breakfast          Soccer Field     Convenience Store   \n",
       "9               Pharmacy    Italian Restaurant  Fast Food Restaurant   \n",
       "10     Convenience Store        Cosmetics Shop      Cuban Restaurant   \n",
       "11            Food Truck     Convenience Store        Cosmetics Shop   \n",
       "12     French Restaurant        Cosmetics Shop      Cuban Restaurant   \n",
       "13     French Restaurant        Cosmetics Shop      Cuban Restaurant   \n",
       "14            Food Truck     Convenience Store        Cosmetics Shop   \n",
       "15              Pharmacy    Italian Restaurant      Cuban Restaurant   \n",
       "16       Bed & Breakfast          Soccer Field     Convenience Store   \n",
       "\n",
       "   8th Most Common Venue   9th Most Common Venue 10th Most Common Venue  \n",
       "6    Japanese Restaurant           Jewelry Store             Kids Store  \n",
       "7          Deli / Bodega        Department Store         Discount Store  \n",
       "8         Cosmetics Shop        Cuban Restaurant           Dance Studio  \n",
       "9   Gym / Fitness Center  Furniture / Home Store           Burger Joint  \n",
       "10          Dance Studio           Deli / Bodega       Department Store  \n",
       "11      Cuban Restaurant            Dance Studio          Deli / Bodega  \n",
       "12          Dance Studio           Deli / Bodega       Department Store  \n",
       "13          Dance Studio           Deli / Bodega       Department Store  \n",
       "14      Cuban Restaurant            Dance Studio          Deli / Bodega  \n",
       "15                  Park             Coffee Shop            Pizza Place  \n",
       "16        Cosmetics Shop        Cuban Restaurant           Dance Studio  "
      ]
     },
     "execution_count": 365,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "neighborhoods_venues_sorted.tail(11)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Clustering Neighborhoods"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Run k-means to cluster neighborhoods into 5 clusters based on venue categories"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 318,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 4, 1, 1, 0, 1, 1, 1, 1], dtype=int32)"
      ]
     },
     "execution_count": 318,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# set number of clusters\n",
    "kclusters = 5\n",
    "\n",
    "miami_grouped_clustering = miami_grouped.drop('Neighborhood', 1)\n",
    "\n",
    "# run k-means clustering\n",
    "kmeans = KMeans(n_clusters=kclusters, random_state=0).fit(miami_grouped_clustering)\n",
    "\n",
    "# check cluster labels generated for each row in the dataframe\n",
    "kmeans.labels_[0:10] "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Finding optimal value of k using elbow method"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 339,
   "metadata": {},
   "outputs": [],
   "source": [
    "distortion = []\n",
    "for i in np.arange(8):\n",
    "    kmeans = KMeans(n_clusters=i+1).fit(miami_grouped_clustering)\n",
    "    distortion.append(kmeans.inertia_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 347,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 2, 3, 4, 5, 6, 7, 8])"
      ]
     },
     "execution_count": 347,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x = np.arange(8)\n",
    "x = x+1\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 355,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Elbow Method to Determine Optimal K')"
      ]
     },
     "execution_count": 355,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.plot(x, distortion, '-ok');\n",
    "plt.xlabel('Value of k')\n",
    "plt.ylabel('Inertia')\n",
    "plt.title('Elbow Method to Determine Optimal K')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Creating new dataframe that includes cluster labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 319,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Neighborhood', '1st Most Common Venue', '2nd Most Common Venue',\n",
       "       '3rd Most Common Venue', '4th Most Common Venue',\n",
       "       '5th Most Common Venue', '6th Most Common Venue',\n",
       "       '7th Most Common Venue', '8th Most Common Venue',\n",
       "       '9th Most Common Venue', '10th Most Common Venue'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 319,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "neighborhoods_venues_sorted.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 320,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_drop.drop(index = 7,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 321,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_drop.reset_index(drop=True, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 322,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# add clustering labels\n",
    "neighborhoods_venues_sorted.insert(0, 'Cluster Labels', kmeans.labels_)\n",
    "\n",
    "miami_merged = df_drop\n",
    "\n",
    "# merge toronto_grouped with toronto_data to add latitude/longitude for each neighborhood\n",
    "miami_merged = miami_merged.join(neighborhoods_venues_sorted.set_index('Neighborhood'), on='Neighborhood')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 323,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cluster Labels</th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Andover</td>\n",
       "      <td>Food</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>Bus Station</td>\n",
       "      <td>Building</td>\n",
       "      <td>Airport Service</td>\n",
       "      <td>Home Service</td>\n",
       "      <td>Train Station</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>Bunche Park</td>\n",
       "      <td>Salon / Barbershop</td>\n",
       "      <td>Park</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Carol City</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Seafood Restaurant</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Miscellaneous Shop</td>\n",
       "      <td>Strip Club</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Caribbean Restaurant</td>\n",
       "      <td>Trail</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>Coral Way Village</td>\n",
       "      <td>Spa</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Cafeteria</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Market</td>\n",
       "      <td>Gas Station</td>\n",
       "      <td>Sushi Restaurant</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Greek Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>Cutler</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Lighthouse</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>Dadeland</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>Indian Restaurant</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Japanese Restaurant</td>\n",
       "      <td>Jewelry Store</td>\n",
       "      <td>Kids Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>Green-Mar Acres</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Playground</td>\n",
       "      <td>Art Gallery</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>Hawley Heights</td>\n",
       "      <td>Pool</td>\n",
       "      <td>Burger Joint</td>\n",
       "      <td>Golf Course</td>\n",
       "      <td>Café</td>\n",
       "      <td>Bed &amp; Breakfast</td>\n",
       "      <td>Soccer Field</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>Howard</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Hardware Store</td>\n",
       "      <td>Sporting Goods Shop</td>\n",
       "      <td>Pharmacy</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Gym / Fitness Center</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Burger Joint</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>Lake Lucerne</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Casino</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>Lakes by the Bay</td>\n",
       "      <td>Housing Development</td>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>Trail</td>\n",
       "      <td>Gym</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>4</td>\n",
       "      <td>Norwood (Norland)</td>\n",
       "      <td>Park</td>\n",
       "      <td>Auto Workshop</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>Saga Bay</td>\n",
       "      <td>Beach</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Concert Hall</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>Scott Lake</td>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Snack Place</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>South Beach</td>\n",
       "      <td>Hotel</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Seafood Restaurant</td>\n",
       "      <td>Beach</td>\n",
       "      <td>Pharmacy</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Park</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Pizza Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>West Kendall</td>\n",
       "      <td>Pool</td>\n",
       "      <td>Burger Joint</td>\n",
       "      <td>Golf Course</td>\n",
       "      <td>Café</td>\n",
       "      <td>Bed &amp; Breakfast</td>\n",
       "      <td>Soccer Field</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Cluster Labels       Neighborhood 1st Most Common Venue  \\\n",
       "0                2            Andover                  Food   \n",
       "1                1   Biscayne Gardens           Bus Station   \n",
       "2                4        Bunche Park    Salon / Barbershop   \n",
       "3                1         Carol City  Fast Food Restaurant   \n",
       "4                1  Coral Way Village                   Spa   \n",
       "5                0             Cutler         Grocery Store   \n",
       "6                1           Dadeland        Clothing Store   \n",
       "7                1    Green-Mar Acres           Yoga Studio   \n",
       "8                1     Hawley Heights                  Pool   \n",
       "9                1             Howard         Grocery Store   \n",
       "10               3       Lake Lucerne            Restaurant   \n",
       "11               1   Lakes by the Bay   Housing Development   \n",
       "12               4  Norwood (Norland)                  Park   \n",
       "13               1           Saga Bay                 Beach   \n",
       "14               1         Scott Lake   American Restaurant   \n",
       "15               1        South Beach                 Hotel   \n",
       "16               1       West Kendall                  Pool   \n",
       "\n",
       "   2nd Most Common Venue 3rd Most Common Venue   4th Most Common Venue  \\\n",
       "0            Yoga Studio     French Restaurant       Convenience Store   \n",
       "1               Building       Airport Service            Home Service   \n",
       "2                   Park           Yoga Studio             Coffee Shop   \n",
       "3       Department Store    Seafood Restaurant          Sandwich Place   \n",
       "4                 Bakery             Cafeteria    Fast Food Restaurant   \n",
       "5             Lighthouse           Yoga Studio              Food Truck   \n",
       "6       Department Store           Coffee Shop  Furniture / Home Store   \n",
       "7             Playground           Art Gallery       French Restaurant   \n",
       "8           Burger Joint           Golf Course                    Café   \n",
       "9             Restaurant        Hardware Store     Sporting Goods Shop   \n",
       "10                Casino           Yoga Studio             Coffee Shop   \n",
       "11   American Restaurant                 Trail                     Gym   \n",
       "12         Auto Workshop            Food Truck             Yoga Studio   \n",
       "13         Grocery Store          Concert Hall             Yoga Studio   \n",
       "14        Discount Store           Snack Place             Yoga Studio   \n",
       "15        Clothing Store    Seafood Restaurant                   Beach   \n",
       "16          Burger Joint           Golf Course                    Café   \n",
       "\n",
       "   5th Most Common Venue 6th Most Common Venue 7th Most Common Venue  \\\n",
       "0         Cosmetics Shop      Cuban Restaurant          Dance Studio   \n",
       "1          Train Station           Yoga Studio        Cosmetics Shop   \n",
       "2      Convenience Store        Cosmetics Shop      Cuban Restaurant   \n",
       "3     Miscellaneous Shop            Strip Club                Bakery   \n",
       "4                 Market           Gas Station      Sushi Restaurant   \n",
       "5      Convenience Store        Cosmetics Shop      Cuban Restaurant   \n",
       "6    American Restaurant     Indian Restaurant    Italian Restaurant   \n",
       "7         Cosmetics Shop      Cuban Restaurant          Dance Studio   \n",
       "8        Bed & Breakfast          Soccer Field     Convenience Store   \n",
       "9               Pharmacy    Italian Restaurant  Fast Food Restaurant   \n",
       "10     Convenience Store        Cosmetics Shop      Cuban Restaurant   \n",
       "11            Food Truck     Convenience Store        Cosmetics Shop   \n",
       "12     French Restaurant        Cosmetics Shop      Cuban Restaurant   \n",
       "13     French Restaurant        Cosmetics Shop      Cuban Restaurant   \n",
       "14            Food Truck     Convenience Store        Cosmetics Shop   \n",
       "15              Pharmacy    Italian Restaurant      Cuban Restaurant   \n",
       "16       Bed & Breakfast          Soccer Field     Convenience Store   \n",
       "\n",
       "   8th Most Common Venue   9th Most Common Venue 10th Most Common Venue  \n",
       "0          Deli / Bodega        Department Store         Discount Store  \n",
       "1       Cuban Restaurant            Dance Studio          Deli / Bodega  \n",
       "2           Dance Studio           Deli / Bodega       Department Store  \n",
       "3   Caribbean Restaurant                   Trail          Grocery Store  \n",
       "4            Pizza Place        Greek Restaurant          Grocery Store  \n",
       "5           Dance Studio           Deli / Bodega       Department Store  \n",
       "6    Japanese Restaurant           Jewelry Store             Kids Store  \n",
       "7          Deli / Bodega        Department Store         Discount Store  \n",
       "8         Cosmetics Shop        Cuban Restaurant           Dance Studio  \n",
       "9   Gym / Fitness Center  Furniture / Home Store           Burger Joint  \n",
       "10          Dance Studio           Deli / Bodega       Department Store  \n",
       "11      Cuban Restaurant            Dance Studio          Deli / Bodega  \n",
       "12          Dance Studio           Deli / Bodega       Department Store  \n",
       "13          Dance Studio           Deli / Bodega       Department Store  \n",
       "14      Cuban Restaurant            Dance Studio          Deli / Bodega  \n",
       "15                  Park             Coffee Shop            Pizza Place  \n",
       "16        Cosmetics Shop        Cuban Restaurant           Dance Studio  "
      ]
     },
     "execution_count": 323,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "neighborhoods_venues_sorted"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 324,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Municipality</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Cluster Labels</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Andover</td>\n",
       "      <td>Miami Gardens</td>\n",
       "      <td>25.968425</td>\n",
       "      <td>-80.212826</td>\n",
       "      <td>2</td>\n",
       "      <td>Food</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>Golden Glades</td>\n",
       "      <td>25.921400</td>\n",
       "      <td>-80.217098</td>\n",
       "      <td>1</td>\n",
       "      <td>Bus Station</td>\n",
       "      <td>Building</td>\n",
       "      <td>Airport Service</td>\n",
       "      <td>Home Service</td>\n",
       "      <td>Train Station</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Bunche Park</td>\n",
       "      <td>Miami Gardens</td>\n",
       "      <td>25.920649</td>\n",
       "      <td>-80.236993</td>\n",
       "      <td>4</td>\n",
       "      <td>Salon / Barbershop</td>\n",
       "      <td>Park</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Carol City</td>\n",
       "      <td>Miami Gardens</td>\n",
       "      <td>25.940649</td>\n",
       "      <td>-80.245604</td>\n",
       "      <td>1</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Seafood Restaurant</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Miscellaneous Shop</td>\n",
       "      <td>Strip Club</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Caribbean Restaurant</td>\n",
       "      <td>Trail</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Coral Way Village</td>\n",
       "      <td>Westchester</td>\n",
       "      <td>25.747305</td>\n",
       "      <td>-80.317700</td>\n",
       "      <td>1</td>\n",
       "      <td>Spa</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Cafeteria</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Market</td>\n",
       "      <td>Gas Station</td>\n",
       "      <td>Sushi Restaurant</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Greek Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>Cutler</td>\n",
       "      <td>Palmetto Bay</td>\n",
       "      <td>25.601008</td>\n",
       "      <td>-80.335983</td>\n",
       "      <td>0</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Lighthouse</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>Dadeland</td>\n",
       "      <td>Kendall</td>\n",
       "      <td>25.689273</td>\n",
       "      <td>-80.314201</td>\n",
       "      <td>1</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>Indian Restaurant</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Japanese Restaurant</td>\n",
       "      <td>Jewelry Store</td>\n",
       "      <td>Kids Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>Green-Mar Acres</td>\n",
       "      <td>Kendall</td>\n",
       "      <td>25.670937</td>\n",
       "      <td>-80.342831</td>\n",
       "      <td>1</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Playground</td>\n",
       "      <td>Art Gallery</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>Hawley Heights</td>\n",
       "      <td>Kendall</td>\n",
       "      <td>25.671813</td>\n",
       "      <td>-80.354861</td>\n",
       "      <td>1</td>\n",
       "      <td>Pool</td>\n",
       "      <td>Burger Joint</td>\n",
       "      <td>Golf Course</td>\n",
       "      <td>Café</td>\n",
       "      <td>Bed &amp; Breakfast</td>\n",
       "      <td>Soccer Field</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>Howard</td>\n",
       "      <td>Kendall</td>\n",
       "      <td>25.647326</td>\n",
       "      <td>-80.334219</td>\n",
       "      <td>1</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Hardware Store</td>\n",
       "      <td>Sporting Goods Shop</td>\n",
       "      <td>Pharmacy</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Gym / Fitness Center</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Burger Joint</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>Lake Lucerne</td>\n",
       "      <td>Miami Gardens</td>\n",
       "      <td>25.965092</td>\n",
       "      <td>-80.241438</td>\n",
       "      <td>3</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Casino</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>Lakes by the Bay</td>\n",
       "      <td>Cutler Bay</td>\n",
       "      <td>25.572329</td>\n",
       "      <td>-80.325331</td>\n",
       "      <td>1</td>\n",
       "      <td>Housing Development</td>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>Trail</td>\n",
       "      <td>Gym</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>Norwood (Norland)</td>\n",
       "      <td>Miami Gardens</td>\n",
       "      <td>25.952025</td>\n",
       "      <td>-80.224928</td>\n",
       "      <td>4</td>\n",
       "      <td>Park</td>\n",
       "      <td>Auto Workshop</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>Saga Bay</td>\n",
       "      <td>Cutler Bay</td>\n",
       "      <td>25.580373</td>\n",
       "      <td>-80.324675</td>\n",
       "      <td>1</td>\n",
       "      <td>Beach</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Concert Hall</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>Scott Lake</td>\n",
       "      <td>Miami Gardens</td>\n",
       "      <td>25.941482</td>\n",
       "      <td>-80.231993</td>\n",
       "      <td>1</td>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Snack Place</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>South Beach</td>\n",
       "      <td>Miami Beach</td>\n",
       "      <td>25.774429</td>\n",
       "      <td>-80.133241</td>\n",
       "      <td>1</td>\n",
       "      <td>Hotel</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Seafood Restaurant</td>\n",
       "      <td>Beach</td>\n",
       "      <td>Pharmacy</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Park</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Pizza Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>West Kendall</td>\n",
       "      <td>Kendall</td>\n",
       "      <td>25.671813</td>\n",
       "      <td>-80.354861</td>\n",
       "      <td>1</td>\n",
       "      <td>Pool</td>\n",
       "      <td>Burger Joint</td>\n",
       "      <td>Golf Course</td>\n",
       "      <td>Café</td>\n",
       "      <td>Bed &amp; Breakfast</td>\n",
       "      <td>Soccer Field</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Neighborhood   Municipality   Latitude  Longitude  Cluster Labels  \\\n",
       "0             Andover  Miami Gardens  25.968425 -80.212826               2   \n",
       "1    Biscayne Gardens  Golden Glades  25.921400 -80.217098               1   \n",
       "2         Bunche Park  Miami Gardens  25.920649 -80.236993               4   \n",
       "3          Carol City  Miami Gardens  25.940649 -80.245604               1   \n",
       "4   Coral Way Village    Westchester  25.747305 -80.317700               1   \n",
       "5              Cutler   Palmetto Bay  25.601008 -80.335983               0   \n",
       "6            Dadeland        Kendall  25.689273 -80.314201               1   \n",
       "7     Green-Mar Acres        Kendall  25.670937 -80.342831               1   \n",
       "8      Hawley Heights        Kendall  25.671813 -80.354861               1   \n",
       "9              Howard        Kendall  25.647326 -80.334219               1   \n",
       "10       Lake Lucerne  Miami Gardens  25.965092 -80.241438               3   \n",
       "11   Lakes by the Bay     Cutler Bay  25.572329 -80.325331               1   \n",
       "12  Norwood (Norland)  Miami Gardens  25.952025 -80.224928               4   \n",
       "13           Saga Bay     Cutler Bay  25.580373 -80.324675               1   \n",
       "14         Scott Lake  Miami Gardens  25.941482 -80.231993               1   \n",
       "15        South Beach    Miami Beach  25.774429 -80.133241               1   \n",
       "16       West Kendall        Kendall  25.671813 -80.354861               1   \n",
       "\n",
       "   1st Most Common Venue 2nd Most Common Venue 3rd Most Common Venue  \\\n",
       "0                   Food           Yoga Studio     French Restaurant   \n",
       "1            Bus Station              Building       Airport Service   \n",
       "2     Salon / Barbershop                  Park           Yoga Studio   \n",
       "3   Fast Food Restaurant      Department Store    Seafood Restaurant   \n",
       "4                    Spa                Bakery             Cafeteria   \n",
       "5          Grocery Store            Lighthouse           Yoga Studio   \n",
       "6         Clothing Store      Department Store           Coffee Shop   \n",
       "7            Yoga Studio            Playground           Art Gallery   \n",
       "8                   Pool          Burger Joint           Golf Course   \n",
       "9          Grocery Store            Restaurant        Hardware Store   \n",
       "10            Restaurant                Casino           Yoga Studio   \n",
       "11   Housing Development   American Restaurant                 Trail   \n",
       "12                  Park         Auto Workshop            Food Truck   \n",
       "13                 Beach         Grocery Store          Concert Hall   \n",
       "14   American Restaurant        Discount Store           Snack Place   \n",
       "15                 Hotel        Clothing Store    Seafood Restaurant   \n",
       "16                  Pool          Burger Joint           Golf Course   \n",
       "\n",
       "     4th Most Common Venue 5th Most Common Venue 6th Most Common Venue  \\\n",
       "0        Convenience Store        Cosmetics Shop      Cuban Restaurant   \n",
       "1             Home Service         Train Station           Yoga Studio   \n",
       "2              Coffee Shop     Convenience Store        Cosmetics Shop   \n",
       "3           Sandwich Place    Miscellaneous Shop            Strip Club   \n",
       "4     Fast Food Restaurant                Market           Gas Station   \n",
       "5               Food Truck     Convenience Store        Cosmetics Shop   \n",
       "6   Furniture / Home Store   American Restaurant     Indian Restaurant   \n",
       "7        French Restaurant        Cosmetics Shop      Cuban Restaurant   \n",
       "8                     Café       Bed & Breakfast          Soccer Field   \n",
       "9      Sporting Goods Shop              Pharmacy    Italian Restaurant   \n",
       "10             Coffee Shop     Convenience Store        Cosmetics Shop   \n",
       "11                     Gym            Food Truck     Convenience Store   \n",
       "12             Yoga Studio     French Restaurant        Cosmetics Shop   \n",
       "13             Yoga Studio     French Restaurant        Cosmetics Shop   \n",
       "14             Yoga Studio            Food Truck     Convenience Store   \n",
       "15                   Beach              Pharmacy    Italian Restaurant   \n",
       "16                    Café       Bed & Breakfast          Soccer Field   \n",
       "\n",
       "   7th Most Common Venue 8th Most Common Venue   9th Most Common Venue  \\\n",
       "0           Dance Studio         Deli / Bodega        Department Store   \n",
       "1         Cosmetics Shop      Cuban Restaurant            Dance Studio   \n",
       "2       Cuban Restaurant          Dance Studio           Deli / Bodega   \n",
       "3                 Bakery  Caribbean Restaurant                   Trail   \n",
       "4       Sushi Restaurant           Pizza Place        Greek Restaurant   \n",
       "5       Cuban Restaurant          Dance Studio           Deli / Bodega   \n",
       "6     Italian Restaurant   Japanese Restaurant           Jewelry Store   \n",
       "7           Dance Studio         Deli / Bodega        Department Store   \n",
       "8      Convenience Store        Cosmetics Shop        Cuban Restaurant   \n",
       "9   Fast Food Restaurant  Gym / Fitness Center  Furniture / Home Store   \n",
       "10      Cuban Restaurant          Dance Studio           Deli / Bodega   \n",
       "11        Cosmetics Shop      Cuban Restaurant            Dance Studio   \n",
       "12      Cuban Restaurant          Dance Studio           Deli / Bodega   \n",
       "13      Cuban Restaurant          Dance Studio           Deli / Bodega   \n",
       "14        Cosmetics Shop      Cuban Restaurant            Dance Studio   \n",
       "15      Cuban Restaurant                  Park             Coffee Shop   \n",
       "16     Convenience Store        Cosmetics Shop        Cuban Restaurant   \n",
       "\n",
       "   10th Most Common Venue  \n",
       "0          Discount Store  \n",
       "1           Deli / Bodega  \n",
       "2        Department Store  \n",
       "3           Grocery Store  \n",
       "4           Grocery Store  \n",
       "5        Department Store  \n",
       "6              Kids Store  \n",
       "7          Discount Store  \n",
       "8            Dance Studio  \n",
       "9            Burger Joint  \n",
       "10       Department Store  \n",
       "11          Deli / Bodega  \n",
       "12       Department Store  \n",
       "13       Department Store  \n",
       "14          Deli / Bodega  \n",
       "15            Pizza Place  \n",
       "16           Dance Studio  "
      ]
     },
     "execution_count": 324,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#miami_merged.astype({'Cluster Labels':'int'}).dtypes\n",
    "#miami_merged\n",
    "#miami_merged.dropna(axis=0, subset=['Cluster Labels'],inplace=True)\n",
    "#miami_merged\n",
    "#miami_merged.astype({'Cluster Labels':'int'})\n",
    "miami_merged"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Visualizing Clustering Results\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Finding coordinates of Miami \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 325,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The geograpical coordinate of Miami are 25.7742658, -80.1936589.\n"
     ]
    }
   ],
   "source": [
    "address = 'Miami, FL'\n",
    "\n",
    "geolocator = Nominatim(user_agent=\"MIA_explorer\")\n",
    "location = geolocator.geocode(address)\n",
    "latitude = location.latitude\n",
    "longitude = location.longitude\n",
    "print('The geograpical coordinate of Miami are {}, {}.'.format(latitude, longitude))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Generating plot visualizing clusters of neighborhoods in Miami"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 326,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"about:blank\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" data-html= onload=\"this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute('data-html')));this.contentDocument.close();\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x10ba0db50>"
      ]
     },
     "execution_count": 326,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Matplotlib and associated plotting modules\n",
    "import matplotlib.cm as cm\n",
    "import matplotlib.colors as colors\n",
    "\n",
    "# create map\n",
    "map_clusters = folium.Map(location=[latitude, longitude], zoom_start=11)\n",
    "\n",
    "# set color scheme for the clusters\n",
    "x = np.arange(kclusters)\n",
    "ys = [i + x + (i*x)**2 for i in range(kclusters)]\n",
    "colors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\n",
    "rainbow = [colors.rgb2hex(i) for i in colors_array]\n",
    "\n",
    "# add markers to the map\n",
    "markers_colors = []\n",
    "for lat, lon, poi, cluster in zip(miami_merged['Latitude'], miami_merged['Longitude'], miami_merged['Neighborhood'], miami_merged['Cluster Labels']):\n",
    "    label = folium.Popup(str(poi) + ' Cluster ' + str(cluster), parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "        [lat, lon],\n",
    "        radius=5,\n",
    "        popup=label,\n",
    "        color=rainbow[cluster-1],\n",
    "        fill=True,\n",
    "        fill_color=rainbow[cluster-1],\n",
    "        fill_opacity=0.7).add_to(map_clusters)\n",
    "       \n",
    "map_clusters"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Examining Clusters\n",
    "\n",
    "Determining discriminating venue categories for each cluster"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cluster1\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 327,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>Cutler</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Lighthouse</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Neighborhood 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "5       Cutler         Grocery Store            Lighthouse   \n",
       "\n",
       "  3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue  \\\n",
       "5           Yoga Studio            Food Truck     Convenience Store   \n",
       "\n",
       "  6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n",
       "5        Cosmetics Shop      Cuban Restaurant          Dance Studio   \n",
       "\n",
       "  9th Most Common Venue 10th Most Common Venue  \n",
       "5         Deli / Bodega       Department Store  "
      ]
     },
     "execution_count": 327,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "miami_merged.loc[miami_merged['Cluster Labels'] == 0, miami_merged.columns[[0] + list(range(5, miami_merged.shape[1]))]]\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cluster2\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 328,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Biscayne Gardens</td>\n",
       "      <td>Bus Station</td>\n",
       "      <td>Building</td>\n",
       "      <td>Airport Service</td>\n",
       "      <td>Home Service</td>\n",
       "      <td>Train Station</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Carol City</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Seafood Restaurant</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Miscellaneous Shop</td>\n",
       "      <td>Strip Club</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Caribbean Restaurant</td>\n",
       "      <td>Trail</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Coral Way Village</td>\n",
       "      <td>Spa</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Cafeteria</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Market</td>\n",
       "      <td>Gas Station</td>\n",
       "      <td>Sushi Restaurant</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Greek Restaurant</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>Dadeland</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>Indian Restaurant</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Japanese Restaurant</td>\n",
       "      <td>Jewelry Store</td>\n",
       "      <td>Kids Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>Green-Mar Acres</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Playground</td>\n",
       "      <td>Art Gallery</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>Hawley Heights</td>\n",
       "      <td>Pool</td>\n",
       "      <td>Burger Joint</td>\n",
       "      <td>Golf Course</td>\n",
       "      <td>Café</td>\n",
       "      <td>Bed &amp; Breakfast</td>\n",
       "      <td>Soccer Field</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>Howard</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Hardware Store</td>\n",
       "      <td>Sporting Goods Shop</td>\n",
       "      <td>Pharmacy</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Gym / Fitness Center</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Burger Joint</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>Lakes by the Bay</td>\n",
       "      <td>Housing Development</td>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>Trail</td>\n",
       "      <td>Gym</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>Saga Bay</td>\n",
       "      <td>Beach</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Concert Hall</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>Scott Lake</td>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Snack Place</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>South Beach</td>\n",
       "      <td>Hotel</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Seafood Restaurant</td>\n",
       "      <td>Beach</td>\n",
       "      <td>Pharmacy</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Park</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Pizza Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>West Kendall</td>\n",
       "      <td>Pool</td>\n",
       "      <td>Burger Joint</td>\n",
       "      <td>Golf Course</td>\n",
       "      <td>Café</td>\n",
       "      <td>Bed &amp; Breakfast</td>\n",
       "      <td>Soccer Field</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Neighborhood 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "1    Biscayne Gardens           Bus Station              Building   \n",
       "3          Carol City  Fast Food Restaurant      Department Store   \n",
       "4   Coral Way Village                   Spa                Bakery   \n",
       "6            Dadeland        Clothing Store      Department Store   \n",
       "7     Green-Mar Acres           Yoga Studio            Playground   \n",
       "8      Hawley Heights                  Pool          Burger Joint   \n",
       "9              Howard         Grocery Store            Restaurant   \n",
       "11   Lakes by the Bay   Housing Development   American Restaurant   \n",
       "13           Saga Bay                 Beach         Grocery Store   \n",
       "14         Scott Lake   American Restaurant        Discount Store   \n",
       "15        South Beach                 Hotel        Clothing Store   \n",
       "16       West Kendall                  Pool          Burger Joint   \n",
       "\n",
       "   3rd Most Common Venue   4th Most Common Venue 5th Most Common Venue  \\\n",
       "1        Airport Service            Home Service         Train Station   \n",
       "3     Seafood Restaurant          Sandwich Place    Miscellaneous Shop   \n",
       "4              Cafeteria    Fast Food Restaurant                Market   \n",
       "6            Coffee Shop  Furniture / Home Store   American Restaurant   \n",
       "7            Art Gallery       French Restaurant        Cosmetics Shop   \n",
       "8            Golf Course                    Café       Bed & Breakfast   \n",
       "9         Hardware Store     Sporting Goods Shop              Pharmacy   \n",
       "11                 Trail                     Gym            Food Truck   \n",
       "13          Concert Hall             Yoga Studio     French Restaurant   \n",
       "14           Snack Place             Yoga Studio            Food Truck   \n",
       "15    Seafood Restaurant                   Beach              Pharmacy   \n",
       "16           Golf Course                    Café       Bed & Breakfast   \n",
       "\n",
       "   6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n",
       "1            Yoga Studio        Cosmetics Shop      Cuban Restaurant   \n",
       "3             Strip Club                Bakery  Caribbean Restaurant   \n",
       "4            Gas Station      Sushi Restaurant           Pizza Place   \n",
       "6      Indian Restaurant    Italian Restaurant   Japanese Restaurant   \n",
       "7       Cuban Restaurant          Dance Studio         Deli / Bodega   \n",
       "8           Soccer Field     Convenience Store        Cosmetics Shop   \n",
       "9     Italian Restaurant  Fast Food Restaurant  Gym / Fitness Center   \n",
       "11     Convenience Store        Cosmetics Shop      Cuban Restaurant   \n",
       "13        Cosmetics Shop      Cuban Restaurant          Dance Studio   \n",
       "14     Convenience Store        Cosmetics Shop      Cuban Restaurant   \n",
       "15    Italian Restaurant      Cuban Restaurant                  Park   \n",
       "16          Soccer Field     Convenience Store        Cosmetics Shop   \n",
       "\n",
       "     9th Most Common Venue 10th Most Common Venue  \n",
       "1             Dance Studio          Deli / Bodega  \n",
       "3                    Trail          Grocery Store  \n",
       "4         Greek Restaurant          Grocery Store  \n",
       "6            Jewelry Store             Kids Store  \n",
       "7         Department Store         Discount Store  \n",
       "8         Cuban Restaurant           Dance Studio  \n",
       "9   Furniture / Home Store           Burger Joint  \n",
       "11            Dance Studio          Deli / Bodega  \n",
       "13           Deli / Bodega       Department Store  \n",
       "14            Dance Studio          Deli / Bodega  \n",
       "15             Coffee Shop            Pizza Place  \n",
       "16        Cuban Restaurant           Dance Studio  "
      ]
     },
     "execution_count": 328,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "miami_merged.loc[miami_merged['Cluster Labels'] == 1, miami_merged.columns[[0] + list(range(5, miami_merged.shape[1]))]]\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cluster3\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 329,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Andover</td>\n",
       "      <td>Food</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "      <td>Discount Store</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Neighborhood 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "0      Andover                  Food           Yoga Studio   \n",
       "\n",
       "  3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue  \\\n",
       "0     French Restaurant     Convenience Store        Cosmetics Shop   \n",
       "\n",
       "  6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n",
       "0      Cuban Restaurant          Dance Studio         Deli / Bodega   \n",
       "\n",
       "  9th Most Common Venue 10th Most Common Venue  \n",
       "0      Department Store         Discount Store  "
      ]
     },
     "execution_count": 329,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "miami_merged.loc[miami_merged['Cluster Labels'] == 2, miami_merged.columns[[0] + list(range(5, miami_merged.shape[1]))]]\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cluster4\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 330,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>Lake Lucerne</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Casino</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Neighborhood 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "10  Lake Lucerne            Restaurant                Casino   \n",
       "\n",
       "   3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue  \\\n",
       "10           Yoga Studio           Coffee Shop     Convenience Store   \n",
       "\n",
       "   6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n",
       "10        Cosmetics Shop      Cuban Restaurant          Dance Studio   \n",
       "\n",
       "   9th Most Common Venue 10th Most Common Venue  \n",
       "10         Deli / Bodega       Department Store  "
      ]
     },
     "execution_count": 330,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "miami_merged.loc[miami_merged['Cluster Labels'] == 3, miami_merged.columns[[0] + list(range(5, miami_merged.shape[1]))]]\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cluster5\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 331,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Bunche Park</td>\n",
       "      <td>Salon / Barbershop</td>\n",
       "      <td>Park</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Convenience Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>Norwood (Norland)</td>\n",
       "      <td>Park</td>\n",
       "      <td>Auto Workshop</td>\n",
       "      <td>Food Truck</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>French Restaurant</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Cuban Restaurant</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Department Store</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Neighborhood 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "2         Bunche Park    Salon / Barbershop                  Park   \n",
       "12  Norwood (Norland)                  Park         Auto Workshop   \n",
       "\n",
       "   3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue  \\\n",
       "2            Yoga Studio           Coffee Shop     Convenience Store   \n",
       "12            Food Truck           Yoga Studio     French Restaurant   \n",
       "\n",
       "   6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n",
       "2         Cosmetics Shop      Cuban Restaurant          Dance Studio   \n",
       "12        Cosmetics Shop      Cuban Restaurant          Dance Studio   \n",
       "\n",
       "   9th Most Common Venue 10th Most Common Venue  \n",
       "2          Deli / Bodega       Department Store  \n",
       "12         Deli / Bodega       Department Store  "
      ]
     },
     "execution_count": 331,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "miami_merged.loc[miami_merged['Cluster Labels'] == 4, miami_merged.columns[[0] + list(range(5, miami_merged.shape[1]))]]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
